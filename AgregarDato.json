{"files":[{"id":"dfacf5a2-8dba-4397-8d71-6ac386401e75","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"America/Guayaquil\",\n  \"dependencies\": {},\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\",\n  \"webapp\": {\n    \"executeAs\": \"USER_DEPLOYING\",\n    \"access\": \"ANYONE_ANONYMOUS\"\n  }\n}"},{"id":"37c3e2e5-1d52-4468-ba5e-3d416fb2df32","name":"Code","type":"server_js","source":"var SheetId \u003d \"1jANyD0255nc4Mrj1KzXb39pXqZjEtS5GNVtUk-NlEoI\";\n\nfunction doGet(e) {\n  return ingresarDatos(e);\n}\n\nfunction doPost(e) {\n  return ingresarDatos(e);\n}\n\nfunction ingresarDatos(e) {\n  // Obtener una referencia a la hoja de Google Sheets\n  var sheetName \u003d \"Produccion\"; // Nombre de la hoja donde deseas exportar los datos\n  var spreadsheet \u003d SpreadsheetApp.openById(SheetId);\n  var sheet \u003d spreadsheet.getSheetByName(sheetName);\n  \n  // Obtener los parámetros de la solicitud HTTP\n  var parametros \u003d e.parameter;\n  \n  // Por ejemplo, supongamos que quieres agregar datos que vienen con los nombres \"nombre\" y \"edad\"\n  var fech \u003d String(parametros.fecha).split(\"-\");\n  var fecha \u003d fech[1]+\"-\"+fech[0]+\"-\"+fech[2];\n  var hora \u003d parametros.hora;\n  var ordenio \u003d parametros.ordenio;\n  var puesto \u003d parametros.puesto;\n  var vaca \u003d parametros.vaca;\n  var volumen \u003d parametros.volumen;\n  \n  //buscar\n  var lastF \u003d sheet.getLastRow();\n  var lastC \u003d sheet.getLastColumn();\n  var rango \u003d sheet.getRange(2,1,lastF+1,lastC);\n  var datos \u003d rango.getDisplayValues();\n  // Recorrer todas las filas de la hoja\n  var filaEncontrada \u003d -1;\n  for (var i \u003d 0; i \u003c datos.length; i++) {\n    if (datos[i][0] \u003d\u003d fecha \u0026\u0026 datos[i][4] \u003d\u003d vaca \u0026\u0026 datos[i][3] \u003d\u003d puesto \u0026\u0026 datos[i][2] \u003d\u003d ordenio) { // Compara con el valor de la primera columna\n      filaEncontrada \u003d i + 1; // La matriz es cero-indexada, por lo que sumamos 1\n      break; // Rompe el bucle una vez encontrado el valor\n    }\n  }\n  // Si existe reemplazamos o añadimos\n  if (filaEncontrada !\u003d -1) {\n    // Reemplazar\n    sheet.getRange(filaEncontrada + 1,1,1,6).setValues([[fecha, hora, ordenio, puesto, vaca, volumen]]);\n  } else {\n    // Añadir una nueva fila con los datos recibidos\n  sheet.appendRow([fecha, hora, ordenio, puesto, vaca, volumen]);\n  }\n  \n  // Ordenar la hoja por la primera columna en orden ascendente\n  sheet.getRange(2, 1, sheet.getLastRow() - 1, lastC).sort({column: 1, ascending: true});\n  \n  if (lastF \u003e\u003d 2) {\n    var range \u003d sheet.getRange(2, 1, lastF - 1, lastC); // Excluir la fila de encabezado\n    range.setHorizontalAlignment(\"rigth\");\n  } else {\n    Logger.log(\"No existen datos en la base de datos.\");\n  }\n  // Responder a la solicitud HTTP\n  return ContentService.createTextOutput(\"Datos ingresados correctamente.\");\n}"}]}