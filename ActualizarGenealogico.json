{"files":[{"id":"62e0a4b8-b851-402c-b89e-76fd84a5f814","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"America/Guayaquil\",\n  \"dependencies\": {\n    \"libraries\": [\n      {\n        \"userSymbol\": \"FirebaseApp\",\n        \"version\": \"30\",\n        \"libraryId\": \"1hguuh4Zx72XVC1Zldm_vTtcUUKUA6iBUOoGnJUWLfqDWx5WlOJHqYkrt\"\n      }\n    ],\n    \"enabledAdvancedServices\": [\n      {\n        \"userSymbol\": \"Sheets\",\n        \"version\": \"v4\",\n        \"serviceId\": \"sheets\"\n      }\n    ]\n  },\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\",\n  \"webapp\": {\n    \"executeAs\": \"USER_DEPLOYING\",\n    \"access\": \"ANYONE_ANONYMOUS\"\n  }\n}"},{"id":"4e8c53f0-d51b-4614-a7cf-a25751503731","name":"Code","type":"server_js","source":"//Firebase ID Library 1hguuh4Zx72XVC1Zldm_vTtcUUKUA6iBUOoGnJUWLfqDWx5WlOJHqYkrt\nvar FirebaseUrl \u003d \"https://genealogico-36806-default-rtdb.firebaseio.com/\";\nvar SheetId \u003d \"1jANyD0255nc4Mrj1KzXb39pXqZjEtS5GNVtUk-NlEoI\";\n\nfunction doGet() {\n  var database \u003d FirebaseApp.getDatabaseByUrl(FirebaseUrl);\n  var spreadsheet \u003d SpreadsheetApp.openById(SheetId);\n  \n  var sheetName \u003d \"Genealogico\";\n  var sheet \u003d spreadsheet.getSheetByName(sheetName);\n  \n  var oldHeaders \u003d [\"id\", \"estado\", \"nombre\", \"raza\", \"f_nacimiento\", \"p_nacimiento\", \"fecundado\", \"sexo\", \"tipo\", \"f_estado\", \"p_estado\", \"precio\", \"comprador\"];\n  var newHeaders \u003d [\"ID\", \"ESTADO\", \"NOMBRE\", \"RAZA\", \"FECHA NACIMIENTO\", \"PESO NACIMIENTO\", \"FECUNDACION\", \"SEXO\", \"TIPO\", \"FECHA ESTADO\", \"PESO ESTADO\", \"PRECIO\", \"COMPRADOR\"];\n  \n  if (sheet \u003d\u003d\u003d null) {\n    sheet \u003d spreadsheet.insertSheet(sheetName);\n  } else {\n    // Elimina todos los datos existentes en la hoja\n    sheet.clearContents();\n  }\n  \n  var data \u003d database.getData(\"/\");\n  var rowIndex \u003d 1;\n  \n  sheet.getRange(rowIndex, 1, 1, oldHeaders.length).setValues([oldHeaders]);\n  rowIndex++;\n  \n  for (var key in data) {\n    var rowData \u003d [];\n    var item \u003d data[key];\n    for (var i \u003d 0; i \u003c oldHeaders.length; i++) {\n      var value \u003d item[oldHeaders[i]];\n      if (typeof value \u003d\u003d\u003d \"string\" \u0026\u0026 value.startsWith(\u0027\"\u0027) \u0026\u0026 value.endsWith(\u0027\"\u0027)) {\n        value \u003d value.substring(1, value.length - 1);\n      }\n      rowData.push(value || \"\");\n    }\n    sheet.getRange(rowIndex, 1, 1, rowData.length).setValues([rowData]);\n    rowIndex++;\n  }\n  \n  // Establece los nuevos encabezados después de agregar los datos\n  sheet.getRange(1, 1, 1, newHeaders.length).setValues([newHeaders]);\n    // Verifica que haya al menos una fila de datos antes de llamar a formatCells()\n  if (sheet.getLastRow() \u003e 1) {\n    formatCells();\n  }\n  adjustAlignment();\n}\n\nfunction formatCells() {\n  var sheetName \u003d \"Genealogico\";\n  \n  var spreadsheet \u003d SpreadsheetApp.openById(SheetId);\n  var sheet \u003d spreadsheet.getSheetByName(sheetName);\n  \n  // Elimina el formato de color de todas las celdas\n  sheet.getRange(1, 1, sheet.getLastRow(), sheet.getLastColumn()).setBackground(null);\n  \n  var dataRange \u003d sheet.getRange(2, 2, sheet.getLastRow() - 1, 1);\n  var dataValues \u003d dataRange.getValues();\n  \n  var statesToColors \u003d {\n    \"ACTIVO\": \"#00FF00\",   // Verde\n    \"DIFUNTO\": \"#FF0000\",  // Rojo\n    \"VENTA\": \"#FFFF00\"     // Amarillo\n  };\n  \n  for (var i \u003d 0; i \u003c dataValues.length; i++) {\n    var state \u003d dataValues[i][0];  // Estado está en la segunda columna (índice 1)\n    var color \u003d statesToColors[state];\n    \n    if (color) {\n      sheet.getRange(i + 2, 2).setBackground(color);\n    }\n  }\n}\n\nfunction adjustAlignment() {\n  var sheetName \u003d \"Genealogico\";\n  \n  var spreadsheet \u003d SpreadsheetApp.openById(SheetId);\n  var sheet \u003d spreadsheet.getSheetByName(sheetName);\n\n  // Alinea los valores al lado izquierdo\n  var dataRange \u003d sheet.getRange(1, 1, sheet.getLastRow(), sheet.getLastColumn());\n  dataRange.setHorizontalAlignment(\"left\");\n}"}]}