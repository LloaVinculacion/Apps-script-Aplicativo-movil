{"files":[{"id":"66e21a55-2185-44da-86f9-2f8b3cae2ec3","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"America/Guayaquil\",\n  \"dependencies\": {\n    \"libraries\": [\n      {\n        \"userSymbol\": \"FirebaseApp\",\n        \"version\": \"30\",\n        \"libraryId\": \"1hguuh4Zx72XVC1Zldm_vTtcUUKUA6iBUOoGnJUWLfqDWx5WlOJHqYkrt\"\n      }\n    ]\n  },\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\",\n  \"webapp\": {\n    \"executeAs\": \"USER_DEPLOYING\",\n    \"access\": \"ANYONE_ANONYMOUS\"\n  }\n}"},{"id":"adffc15b-4325-43d5-baa0-9f3772436c85","name":"Code","type":"server_js","source":"//Firebase ID Library 1hguuh4Zx72XVC1Zldm_vTtcUUKUA6iBUOoGnJUWLfqDWx5WlOJHqYkrt\nvar FirebaseURL \u003d \u0027https://produccion-14322-default-rtdb.firebaseio.com/\u0027;\n\nfunction doGet() {\n  var fechaActual \u003d Utilities.formatDate(new Date(), \u0027GMT-05:00\u0027, \u0027yyyy-MM-dd\u0027);\n  var baseDatos \u003d FirebaseApp.getDatabaseByUrl(FirebaseURL);\n  var fechaSeparada \u003d fechaActual.split(\u0027-\u0027);\n  var fechaOrdenada \u003d fechaSeparada[2]+\u0027-\u0027+fechaSeparada[1]+\u0027-\u0027+fechaSeparada[0];\n  var referencia \u003d baseDatos.getData(fechaOrdenada);\n  //var referencia \u003d baseDatos.getData(fechaActual);\n  var encabezados \u003d [\u0027Arete\u0027, \u0027Puesto\u0027, \u0027Horario\u0027, \u0027Volumen\u0027];\n  var longitudMaxima \u003d encabezados.reduce((max, header) \u003d\u003e Math.max(max, header.length), 0);\n  var lineaSeparadora \u003d \u0027-\u0027.repeat(longitudMaxima * encabezados.length + (encabezados.length - 1) * 2) + \u0027%0A\u0027; // Línea de guiones\nconsole.log(referencia)\n\n  var matrizString \u003d encabezados.map(header \u003d\u003e header.padEnd(longitudMaxima).replace(/ /g, \u0027%20\u0027)).join(\u0027|\u0027) + \u0027%0A\u0027; // Encabezados alineado\n  matrizString +\u003d lineaSeparadora;\n  \n  var totalVolumen \u003d 0;\n  /*\n  for (var l in referencia) {\n    var fila \u003d [\n      referencia[l].Arete.replace(/\"/g, \"\"),\n      referencia[l].Puesto.replace(/\"/g, \"\"),\n      referencia[l].Volumen.replace(/\"/g, \"\")\n    ];\n\n    matrizString +\u003d fila.map(value \u003d\u003e value.padEnd(longitudMaxima).replace(/ /g, \u0027%20\u0027)).join(\u0027|\u0027) + \u0027%0A\u0027; // Agrega la fila alineada al string con separadores y salto de línea\n    totalVolumen +\u003d parseFloat(referencia[l].Volumen.replace(/\"/g, \"\")); // Suma los valores de Volumen para calcular el total\n  }\n*/\nvar ban \u003d 0;\n  for (let propV in referencia){\n    var referencia0 \u003d Object.keys(referencia)[ban];\n    console.log(\u0027vaca: \u0027+Object.keys(referencia)[ban])\n    ban \u003d ban+1;\n    var referencia1 \u003d referencia[propV];\n    console.log(\u0027Puesto: \u0027+Object.keys(referencia1)[0])\n    for (let propP in referencia1){\n      var referencia2 \u003d referencia1[propP];\n      console.log(\u0027Horario: \u0027+Object.keys(referencia2)[0])\n      for (let propH in referencia2){\n        var referencia3 \u003d referencia2[propH];\n        console.log(\u0027aja: \u0027+Object.keys(referencia3)[0])\n        var fila1\u003d[\n          Object.keys(referencia)[ban],\n          Object.keys(referencia1)[0],\n          Object.keys(referencia2)[0],\n          referencia3.Volumen\n        ];\n        totalVolumen +\u003d parseFloat(referencia3.Volumen.replace(/\"/g, \"\"));\n        matrizString +\u003d referencia0+\u0027%20|%20\u0027+Object.keys(referencia1)[0]+\u0027%20|%20\u0027+Object.keys(referencia2)[0]+\u0027%20|%20\u0027+referencia3.Volumen.replace(/\"/g, \"\")+\u0027%0A\u0027;\n        /*\n        matrizString +\u003d fila1.map(value \u003d\u003e value.padEnd(longitudMaxima).replace(/ /g, \u0027%20\u0027)).join(\u0027|\u0027) + \u0027%0A\u0027; // Agrega la fila alineada al string con separadores y salto de línea\n    totalVolumen +\u003d parseFloat(referencia[l].Volumen.replace(/\"/g, \"\")); // Suma los valores de Volumen para calcular el total\n        console.log(referencia2[propH].Volumen)\n        */\n      }\n    }\n  }\n\n  console.log(totalVolumen)\n  matrizString +\u003d lineaSeparadora;\n  matrizString +\u003d `Total:%20%20${totalVolumen}L%0A`; // Agrega el total al string\n  matrizString +\u003d `Fecha:%20${fechaActual}`; // Agrega la fecha al string\n  \n  Logger.log(matrizString); // Muestra el string en el registro (ventana \"Ver\" -\u003e \"Registro de ejecución\" en Apps Script Editor).\n  return ContentService.createTextOutput(matrizString);\n}"}]}